<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mp">	
	<resultMap type="com.in.team2.vo.MPVO" id="mp"></resultMap>
	
	<select id='search1'  parameterType="com.in.team2.vo.MPVO" statementType="CALLABLE">	
		{ CALL 
	DECLARE		
		v_cursor SYS_REFCURSOR;
		
	BEGIN	
		 OPEN v_cursor FOR
				
			SELECT * FROM (SELECT CASE
						
						WHEN SOLD_DATE BETWEEN SYSDATE-7 AND SYSDATE-6 THEN TO_CHAR(SYSDATE-6,'YYYY-MM-DD')
						WHEN SOLD_DATE BETWEEN SYSDATE-6 AND SYSDATE-5 THEN TO_CHAR(SYSDATE-5,'YYYY-MM-DD')
						WHEN SOLD_DATE BETWEEN SYSDATE-5 AND SYSDATE-4 THEN TO_CHAR(SYSDATE-4,'YYYY-MM-DD')
						WHEN SOLD_DATE BETWEEN SYSDATE-4 AND SYSDATE-3 THEN TO_CHAR(SYSDATE-3,'YYYY-MM-DD')
						WHEN SOLD_DATE BETWEEN  SYSDATE-3 AND SYSDATE-2 THEN TO_CHAR(SYSDATE-2,'YYYY-MM-DD')
						WHEN SOLD_DATE BETWEEN  SYSDATE-2 AND SYSDATE-1 THEN TO_CHAR(SYSDATE-1,'YYYY-MM-DD')
						WHEN SOLD_DATE BETWEEN  SYSDATE-1 AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM-DD')
						END AS SEARCH_INTERVAL, AVG(ITEM_CURPRICE) AS ITEM_CURPRICE
						FROM MARKET_PRICE
						WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
						SYSDATE-7 AND SYSDATE 
						
						GROUP BY CASE 							
							WHEN SOLD_DATE BETWEEN SYSDATE-7 AND SYSDATE-6 THEN TO_CHAR(SYSDATE-6,'YYYY-MM-DD')
							WHEN SOLD_DATE BETWEEN SYSDATE-6 AND SYSDATE-5 THEN TO_CHAR(SYSDATE-5,'YYYY-MM-DD')
							WHEN SOLD_DATE BETWEEN SYSDATE-5 AND SYSDATE-4 THEN TO_CHAR(SYSDATE-4,'YYYY-MM-DD')
							WHEN SOLD_DATE BETWEEN SYSDATE-4 AND SYSDATE-3 THEN TO_CHAR(SYSDATE-3,'YYYY-MM-DD')
							WHEN SOLD_DATE BETWEEN  SYSDATE-3 AND SYSDATE-2 THEN TO_CHAR(SYSDATE-2,'YYYY-MM-DD')
							WHEN SOLD_DATE BETWEEN  SYSDATE-2 AND SYSDATE-1 THEN TO_CHAR(SYSDATE-1,'YYYY-MM-DD')
							WHEN SOLD_DATE BETWEEN  SYSDATE-1 AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM-DD')
						END)
                        ORDER BY SEARCH_INTERVAL ASC;
			
		#{resultSet, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=mp} := v_cursor;	 
		END }
	</select>
	
	
	
	<select id='search2'  parameterType="com.in.team2.vo.MPVO" statementType="CALLABLE">	
		{ CALL 
	DECLARE
		
		v_cursor SYS_REFCURSOR;
		
	BEGIN 				
		
	
		 OPEN v_cursor FOR
				SELECT * FROM (SELECT CASE
						
						WHEN SOLD_DATE BETWEEN SYSDATE-28 AND SYSDATE-21 THEN TO_CHAR(SYSDATE-21,'YYYY-MM-DD')
						WHEN SOLD_DATE BETWEEN  SYSDATE-21 AND SYSDATE-14 THEN TO_CHAR(SYSDATE-14,'YYYY-MM-DD')
						WHEN SOLD_DATE BETWEEN  SYSDATE-14 AND SYSDATE-7 THEN TO_CHAR(SYSDATE-7,'YYYY-MM-DD')
						WHEN SOLD_DATE BETWEEN  SYSDATE-7 AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM-DD')
						END AS SEARCH_INTERVAL, AVG(ITEM_CURPRICE) AS ITEM_CURPRICE
						FROM MARKET_PRICE
						WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
						SYSDATE-28 AND SYSDATE 
						
						GROUP BY CASE 							
							WHEN SOLD_DATE BETWEEN SYSDATE-28 AND SYSDATE-21 THEN TO_CHAR(SYSDATE-21,'YYYY-MM-DD')
							WHEN SOLD_DATE BETWEEN  SYSDATE-21 AND SYSDATE-14 THEN TO_CHAR(SYSDATE-14,'YYYY-MM-DD')
							WHEN SOLD_DATE BETWEEN  SYSDATE-14 AND SYSDATE-7 THEN TO_CHAR(SYSDATE-7,'YYYY-MM-DD')
							WHEN SOLD_DATE BETWEEN  SYSDATE-7 AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM-DD')
						END)
                        ORDER BY SEARCH_INTERVAL ASC;
			
			
		#{resultSet, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=mp} := v_cursor;	 
		END }
	</select>
	
	
	<select id='search3'  parameterType="com.in.team2.vo.MPVO" statementType="CALLABLE">	
		{ CALL 
	DECLARE
		
		v_cursor SYS_REFCURSOR;
		
	BEGIN 				
		
	
		 OPEN v_cursor FOR
				
			SELECT * FROM (SELECT CASE
						
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-3) AND ADD_MONTHS(SYSDATE,-2) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-2) AND ADD_MONTHS(SYSDATE,-1) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM')
						END AS SEARCH_INTERVAL, AVG(ITEM_CURPRICE) AS ITEM_CURPRICE
						FROM MARKET_PRICE
						WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
						ADD_MONTHS(SYSDATE,-3) AND SYSDATE 
						
						GROUP BY CASE 							
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-3) AND ADD_MONTHS(SYSDATE,-2) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-2) AND ADD_MONTHS(SYSDATE,-1) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM')
						END)
                        ORDER BY SEARCH_INTERVAL ASC;
			
		#{resultSet, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=mp} := v_cursor;	 
		END }
	</select>
	
	
	<select id='search4'  parameterType="com.in.team2.vo.MPVO" statementType="CALLABLE">	
		{ CALL 
	DECLARE
		v_cursor SYS_REFCURSOR;
		
	BEGIN 					
		 OPEN v_cursor FOR
				
			SELECT * FROM (SELECT CASE
						
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-6) AND ADD_MONTHS(SYSDATE,-5) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-5) AND ADD_MONTHS(SYSDATE,-4) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-4),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-4) AND ADD_MONTHS(SYSDATE,-3) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-3),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-3) AND ADD_MONTHS(SYSDATE,-2) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-2) AND ADD_MONTHS(SYSDATE,-1) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM')
						END AS SEARCH_INTERVAL, AVG(ITEM_CURPRICE) AS ITEM_CURPRICE
						FROM MARKET_PRICE
						WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
						ADD_MONTHS(SYSDATE,-6) AND SYSDATE 
						
						GROUP BY CASE 							
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-6) AND ADD_MONTHS(SYSDATE,-5) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-5) AND ADD_MONTHS(SYSDATE,-4) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-4),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-4) AND ADD_MONTHS(SYSDATE,-3) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-3),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-3) AND ADD_MONTHS(SYSDATE,-2) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-2) AND ADD_MONTHS(SYSDATE,-1) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM')
						END)
                        ORDER BY SEARCH_INTERVAL ASC;
			
		#{resultSet, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=mp} := v_cursor;	 
		END }
	</select>
	
	
	
	
	<select id='search5'  parameterType="com.in.team2.vo.MPVO" statementType="CALLABLE">	
		{ CALL 
	DECLARE
		v_cursor SYS_REFCURSOR;
		<!-- cursor v_cur is SELECT * FROM (SELECT CASE
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-12) AND ADD_MONTHS(SYSDATE,-11) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-11),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-11) AND ADD_MONTHS(SYSDATE,-10) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-10),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-10) AND ADD_MONTHS(SYSDATE,-9) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-9),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-9) AND ADD_MONTHS(SYSDATE,-8) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-8),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-8) AND ADD_MONTHS(SYSDATE,-7) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-7),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-7) AND ADD_MONTHS(SYSDATE,-6) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-6),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-6) AND ADD_MONTHS(SYSDATE,-5) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-5) AND ADD_MONTHS(SYSDATE,-4) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-4),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-4) AND ADD_MONTHS(SYSDATE,-3) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-3),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-3) AND ADD_MONTHS(SYSDATE,-2) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-2) AND ADD_MONTHS(SYSDATE,-1) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM')
						END AS SEARCH_INTERVAL, AVG(ITEM_CURPRICE) AS ITEM_CURPRICE
						FROM MARKET_PRICE
						WHERE  SOLD_DATE BETWEEN
						ADD_MONTHS(SYSDATE,-12) AND SYSDATE
						
						GROUP BY CASE 
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-12) AND ADD_MONTHS(SYSDATE,-11) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-11),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-11) AND ADD_MONTHS(SYSDATE,-10) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-10),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-10) AND ADD_MONTHS(SYSDATE,-9) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-9),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-9) AND ADD_MONTHS(SYSDATE,-8) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-8),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-8) AND ADD_MONTHS(SYSDATE,-7) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-7),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-7) AND ADD_MONTHS(SYSDATE,-6) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-6),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-6) AND ADD_MONTHS(SYSDATE,-5) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-5) AND ADD_MONTHS(SYSDATE,-4) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-4),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-4) AND ADD_MONTHS(SYSDATE,-3) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-3),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-3) AND ADD_MONTHS(SYSDATE,-2) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-2) AND ADD_MONTHS(SYSDATE,-1) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM')
						END)
                        ORDER BY SEARCH_INTERVAL; -->
		
		
	BEGIN 			
	
	
		open v_cursor for
		
				SELECT * FROM (SELECT CASE
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-12) AND ADD_MONTHS(SYSDATE,-11) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-11),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-11) AND ADD_MONTHS(SYSDATE,-10) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-10),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-10) AND ADD_MONTHS(SYSDATE,-9) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-9),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-9) AND ADD_MONTHS(SYSDATE,-8) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-8),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-8) AND ADD_MONTHS(SYSDATE,-7) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-7),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-7) AND ADD_MONTHS(SYSDATE,-6) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-6),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-6) AND ADD_MONTHS(SYSDATE,-5) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-5) AND ADD_MONTHS(SYSDATE,-4) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-4),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-4) AND ADD_MONTHS(SYSDATE,-3) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-3),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-3) AND ADD_MONTHS(SYSDATE,-2) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-2) AND ADD_MONTHS(SYSDATE,-1) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM')
						WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM')
						END AS SEARCH_INTERVAL, AVG(ITEM_CURPRICE) AS ITEM_CURPRICE
						FROM MARKET_PRICE
						WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
						ADD_MONTHS(SYSDATE,-12) AND SYSDATE 
						
						GROUP BY CASE 
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-12) AND ADD_MONTHS(SYSDATE,-11) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-11),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-11) AND ADD_MONTHS(SYSDATE,-10) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-10),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-10) AND ADD_MONTHS(SYSDATE,-9) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-9),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-9) AND ADD_MONTHS(SYSDATE,-8) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-8),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-8) AND ADD_MONTHS(SYSDATE,-7) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-7),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-7) AND ADD_MONTHS(SYSDATE,-6) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-6),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-6) AND ADD_MONTHS(SYSDATE,-5) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-5) AND ADD_MONTHS(SYSDATE,-4) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-4),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-4) AND ADD_MONTHS(SYSDATE,-3) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-3),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-3) AND ADD_MONTHS(SYSDATE,-2) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-2) AND ADD_MONTHS(SYSDATE,-1) THEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM')
							WHEN SOLD_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE THEN TO_CHAR(SYSDATE,'YYYY-MM')
						END)
                        ORDER BY SEARCH_INTERVAL ASC;
		
		
		#{resultSet, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=mp} := v_cursor;	
		END }
	</select> 
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- <select id='search5'  parameterType="com.in.team2.vo.MPVO" statementType="CALLABLE">	
		{ CALL 
	DECLARE
		sss VARCHAR2(20);
		eee VARCHAR2(20);
		v_cursor SYS_REFCURSOR;
		
	BEGIN 				
		SELECT TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY-MM-DD') into sss FROM dual;		
		#{start, mode=OUT, jdbcType=VARCHAR, javaType=string} := sss;
		
		SELECT TO_CHAR((SYSDATE),'YYYY-MM-DD') into eee FROM dual;		
		#{end, mode=OUT, jdbcType=VARCHAR, javaType=string} := eee;
	
		 OPEN v_cursor FOR
				
			SELECT ROUND(AVG(ITEM_CURPRICE),0) AS ITEM_CURPRICE,SOLD_DATE FROM
			(SELECT * FROM MARKET_PRICE
			WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
			ADD_MONTHS(SYSDATE,-12) AND SYSDATE 
			ORDER BY SOLD_DATE ASC)
			GROUP BY SOLD_DATE
			ORDER BY SOLD_DATE ASC;
			
		#{resultSet, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=mp} := v_cursor;	 
		END }
	</select> -->
	
	
	
	
	
	
	
	
	
	
	
	<!-- 
	<select id='search2'  parameterType="com.in.team2.vo.MPVO" resultType="com.in.team2.vo.MPVO">	
		SELECT ROUND(AVG(ITEM_CURPRICE),0) AS ITEM_CURPRICE,SOLD_DATE FROM
		(SELECT * FROM MARKET_PRICE
		WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
		ADD_MONTHS(SYSDATE,-1) AND SYSDATE 
		ORDER BY SOLD_DATE ASC)
		GROUP BY SOLD_DATE
		ORDER BY SOLD_DATE ASC 
	</select>	
	
	<select id='search3'  parameterType="com.in.team2.vo.MPVO" resultType="com.in.team2.vo.MPVO">	
		SELECT ROUND(AVG(ITEM_CURPRICE),0) AS ITEM_CURPRICE,SOLD_DATE FROM
		(SELECT * FROM MARKET_PRICE
		WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
		ADD_MONTHS(SYSDATE,-3) AND SYSDATE 
		ORDER BY SOLD_DATE ASC)
		GROUP BY SOLD_DATE
		ORDER BY SOLD_DATE ASC 
	</select>
	
	<select id='search4'  parameterType="com.in.team2.vo.MPVO" resultType="com.in.team2.vo.MPVO">	
		SELECT ROUND(AVG(ITEM_CURPRICE),0) AS ITEM_CURPRICE,SOLD_DATE FROM
		(SELECT * FROM MARKET_PRICE
		WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
		ADD_MONTHS(SYSDATE,-6) AND SYSDATE 
		ORDER BY SOLD_DATE ASC)
		GROUP BY SOLD_DATE
		ORDER BY SOLD_DATE ASC 
	</select>
	
	<select id='search5'  parameterType="com.in.team2.vo.MPVO" resultType="com.in.team2.vo.MPVO">	
		SELECT ROUND(AVG(ITEM_CURPRICE),0) AS ITEM_CURPRICE,SOLD_DATE FROM
		(SELECT * FROM MARKET_PRICE
		WHERE ITEM_CATEGORY=#{itemCategory} AND ITEM_NAME=#{itemName} AND ITEM_CLASS=#{itemClass} AND SOLD_DATE BETWEEN
		ADD_MONTHS(SYSDATE,-12) AND SYSDATE 
		ORDER BY SOLD_DATE ASC)
		GROUP BY SOLD_DATE
		ORDER BY SOLD_DATE ASC 
	</select> -->
	
	
	
	
    
</mapper>

